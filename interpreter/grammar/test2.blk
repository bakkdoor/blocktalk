def foo = do |x|
  Console puts ("bkzubb: " + (x to_s))
end

def bar = do
  100
end

Console puts: (self foo: 10)


[1,2,3] each { |x|
    Console puts: x
}


c = Class new {
  def foo = do |x|
      Console puts: ("in foo: " + x)
  end
}

obj = c new

obj foo: (10 to_s)


Class in: :Foo deriving: Object do
  def bar = do |x|
    Console puts: ("in Foo#bar: " + (x to_s))
  end
end

foo = Foo new
foo bar: "hello, world"


Class in: :Foo do
  def bazz = do
    Console puts: "in Foo#bazz!Â°!!"
    self bar: "so cool!!"
  end
end

foo bazz


Class in: :MyArray deriving: Array do
  def crazy_ouput = do
    self each { |x|
       Console puts: ("craaaaaazy: " + (x to_s))
    }
  end
end

myarr = MyArray new
myarr << 10
myarr << 100

myarr crazy_ouput

Console puts: (myarr class)
