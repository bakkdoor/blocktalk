Class >> :Array {
  def << = { |element|
    # do some stuff here to add element to array at end
  }

  def push = (<<)
  def add = (<<)

  def pop = {
    # top-of-stack (tos) = last element in array.
    tos = last
    #self remove: tos
    # or shorter (since 'self' is implicit here):
    remove: tos
    tos
  }

  def peek = (last)

  def each = { |block|
    0 to: (self size) do |index|
      block call: (self at: index)
    end
  }

  # ... and many more
}
